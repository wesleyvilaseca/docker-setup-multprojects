version: "3.8"

services:
  # Nginx - Proxy Reverso
  nginx:
    image: nginx:alpine
    container_name: dev-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./projects:/var/www/projects
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - php
      - node
    networks:
      - dev-network

  # PHP 8.3 com Laravel
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: dev-php
    ports:
      - "9003:9003" # Xdebug
    volumes:
      - ./projects:/var/www/projects
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    working_dir: /var/www/projects
    networks:
      - dev-network

  # Node.js para backends
  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: dev-node
    volumes:
      - ./projects:/var/www/projects
    working_dir: /var/www/projects
    networks:
      - dev-network

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: dev-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/mongod.conf:/etc/mongod.conf
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    networks:
      - dev-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - dev-network

  # Mailhog para desenvolvimento
  mailhog:
    image: mailhog/mailhog:latest
    container_name: dev-mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - dev-network

  # phpMyAdmin (opcional para MySQL se necess√°rio)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: dev-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    networks:
      - dev-network

volumes:
  mongodb_data:
  redis_data:

networks:
  dev-network:
    driver: bridge
